steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '--no-cache'
      - '-t'
      - 'gcr.io/$PROJECT_ID/react-app:latest'
      - '-t'
      - 'gcr.io/$PROJECT_ID/react-app:$SHORT_SHA'
      - '--build-arg'
      - 'REACT_APP_API_URL=https://focus-music-app-368754647823.us-central1.run.app'
      - '.'

  # Push both tags
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/react-app:latest']
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/react-app:$SHORT_SHA']

  # Deploy container image to Cloud Run with error handling
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Starting deployment to Cloud Run..."
        if gcloud run deploy focus-music-app \
          --image=gcr.io/$PROJECT_ID/react-app:$SHORT_SHA \
          --region=us-central1 \
          --platform=managed \
          --allow-unauthenticated \
          --set-env-vars=NODE_ENV=production \
          --service-account=harry-gillen-builder@appspot.gserviceaccount.com; then
          echo "Deployment successful!"
        else
          echo "Deployment failed. Checking service account and permissions..."
          gcloud projects get-iam-policy $PROJECT_ID \
            --flatten="bindings[].members" \
            --filter="bindings.members:harry-gillen-builder@appspot.gserviceaccount.com"
          exit 1
        fi

  # Cleanup old images (simplified)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'container'
      - 'images'
      - 'list-tags'
      - 'gcr.io/$PROJECT_ID/react-app'
      - '--limit=5'
      - '--format=get(digest)'
      - '--sort-by=~timestamp'

options:
  logging: CLOUD_LOGGING_ONLY

images:
  - 'gcr.io/$PROJECT_ID/react-app:latest'
  - 'gcr.io/$PROJECT_ID/react-app:$SHORT_SHA'

serviceAccount: 'harry-gillen-builder@appspot.gserviceaccount.com'
timeout: '1200s'